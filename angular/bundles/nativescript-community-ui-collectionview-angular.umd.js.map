{"version":3,"file":"nativescript-community-ui-collectionview-angular.umd.js","sources":["../../../../src/collectionview/angular/collectionview-comp.ts","../../../../src/collectionview/angular/index.ts"],"sourcesContent":["import {\n    AfterContentInit,\n    ChangeDetectionStrategy,\n    Component,\n    ContentChild,\n    Directive,\n    DoCheck,\n    ElementRef,\n    EmbeddedViewRef,\n    EventEmitter,\n    Host,\n    Inject,\n    Input,\n    IterableDiffer,\n    IterableDiffers,\n    OnDestroy,\n    Output,\n    TemplateRef,\n    ViewChild,\n    ViewContainerRef,\n    ÉµisListLikeIterable as isListLikeIterable,\n} from '@angular/core';\nimport { KeyedTemplate, LayoutBase, ObservableArray, Trace, View } from '@nativescript/core';\nimport { CLog, CLogTypes, CollectionView, CollectionViewItemEventData, ListViewViewTypes } from '@nativescript-community/ui-collectionview';\n\nimport { getSingleViewRecursive, isKnownView, registerElement } from '@nativescript/angular';\n\nregisterElement('CollectionView', () => CollectionView);\n\nconst NG_VIEW = '_ngViewRef';\n\nexport class ItemContext {\n    constructor(\n        public $implicit?: any,\n        public item?: any,\n        public index?: number,\n        public even?: boolean,\n        public odd?: boolean\n    ) {}\n}\n\nexport interface SetupItemViewArgs {\n    view: EmbeddedViewRef<any>;\n    data: any;\n    index: number;\n    context: ItemContext;\n}\n\n@Component({\n    selector: 'CollectionView',\n    template: `\n        <DetachedContainer>\n            <Placeholder #loader></Placeholder>\n        </DetachedContainer>\n    `,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CollectionViewComponent implements DoCheck, OnDestroy, AfterContentInit {\n    public get nativeElement(): any {\n        return this._collectionView;\n    }\n    public get listView(): any {\n        return this._collectionView;\n    }\n\n    @ViewChild('loader', { read: ViewContainerRef, static: true }) public loader: ViewContainerRef;\n    @Output() public setupItemView = new EventEmitter<SetupItemViewArgs>();\n    @ContentChild(TemplateRef, { read: TemplateRef, static: true }) public itemTemplateQuery: TemplateRef<ItemContext>;\n\n    @Input()\n    public get itemTemplate() {\n        return this._itemTemplate;\n    }\n    public set itemTemplate(value: any) {\n        this._itemTemplate = value;\n        this._collectionView.refresh();\n    }\n    @Input()\n    public get items() {\n        return this._items;\n    }\n    public set items(value: any) {\n        this._items = value;\n        let needDiffer = true;\n        if (value instanceof ObservableArray) {\n            needDiffer = false;\n        }\n        if (needDiffer && !this._differ && isListLikeIterable(value)) {\n            this._differ = this._iterableDiffers.find(this._items).create((_index, item) => item);\n        }\n\n        this._collectionView.items = this._items;\n    }\n\n    private _collectionView: CollectionView;\n    private _items: any;\n    private _differ: IterableDiffer<KeyedTemplate>;\n    private _itemTemplate: TemplateRef<ItemContext>;\n    private _templateMap: Map<string, KeyedTemplate>;\n\n    constructor(@Inject(ElementRef) _elementRef: ElementRef, @Inject(IterableDiffers) private _iterableDiffers: IterableDiffers) {\n        this._collectionView = _elementRef.nativeElement;\n\n        this._collectionView.on(CollectionView.itemLoadingEvent, this.onItemLoading, this);\n        this._collectionView.itemViewLoader = this.itemViewLoader;\n    }\n\n    private itemViewLoader = (viewType) => {\n        switch (viewType) {\n            case ListViewViewTypes.ItemView:\n                if (this._itemTemplate && this.loader) {\n                    const nativeItem = this.loader.createEmbeddedView(this._itemTemplate, new ItemContext(), 0);\n                    const typedView = getItemViewRoot(nativeItem);\n                    typedView[NG_VIEW] = nativeItem;\n                    return typedView;\n                }\n                break;\n        }\n        return null;\n    };\n\n    public ngAfterContentInit() {\n        if (Trace.isEnabled()) {\n            CLog(CLogTypes.info, 'CollectionView.ngAfterContentInit()');\n        }\n        this.setItemTemplates();\n    }\n\n    public ngOnDestroy() {\n        this._collectionView.off(CollectionView.itemLoadingEvent, this.onItemLoading, this);\n    }\n\n    public ngDoCheck() {\n        if (Trace.isEnabled()) {\n            CLog(CLogTypes.info, 'ngDoCheck() - execute differ? ' + this._differ);\n        }\n        if (this._differ) {\n            if (Trace.isEnabled()) {\n                CLog(CLogTypes.info, 'ngDoCheck() - execute differ');\n            }\n            const changes = this._differ.diff(this._items);\n            if (changes) {\n                if (Trace.isEnabled()) {\n                    CLog(CLogTypes.info, 'ngDoCheck() - refresh');\n                }\n                this.refresh();\n            }\n        }\n    }\n\n    public registerTemplate(key: string, template: TemplateRef<ItemContext>) {\n        if (Trace.isEnabled()) {\n            CLog(CLogTypes.info, 'registerTemplate for key: ' + key);\n        }\n        if (!this._templateMap) {\n            this._templateMap = new Map<string, KeyedTemplate>();\n        }\n\n        const keyedTemplate = {\n            key,\n            createView: this.getItemTemplateViewFactory(template),\n        };\n\n        this._templateMap.set(key, keyedTemplate);\n    }\n\n    // @HostListener('itemLoadingInternal', ['$event'])\n    public onItemLoading(args: CollectionViewItemEventData) {\n        if (!args.view && !this.itemTemplate) {\n            return;\n        }\n        if (!this.items) return;\n        const index = args.index;\n        const items = (args.object as any).items;\n        const currentItem =\n            typeof items.getItem === 'function'\n                ? items.getItem(index)\n                : items[index];\n        let viewRef: EmbeddedViewRef<ItemContext>;\n\n        if (Trace.isEnabled()) {\n            CLog(CLogTypes.info, `onItemLoading: ${index} - Reusing existing view`);\n        }\n\n        viewRef = args.view[NG_VIEW];\n        // Getting angular view from original element (in cases when ProxyViewContainer\n        // is used NativeScript internally wraps it in a StackLayout)\n        if (\n            !viewRef &&\n            args.view instanceof LayoutBase &&\n            args.view.getChildrenCount() > 0\n        ) {\n            viewRef = args.view.getChildAt(0)[NG_VIEW];\n        }\n\n        if (!viewRef && Trace.isEnabled()) {\n            if (Trace.isEnabled()) {\n                CLog(CLogTypes.info, `ViewReference not found for item ${index}. View recycling is not working`);\n            }\n        }\n\n        if (!viewRef) {\n            if (Trace.isEnabled()) {\n                CLog(CLogTypes.info, `onItemLoading: ${index} - Creating view from template`);\n            }\n\n            viewRef = this.loader.createEmbeddedView(\n                this.itemTemplate,\n                new ItemContext(),\n                0\n            );\n            args.view = getItemViewRoot(viewRef);\n            args.view[NG_VIEW] = viewRef;\n        }\n\n        this.setupViewRef(viewRef, currentItem, index);\n\n        this.detectChangesOnChild(viewRef, index);\n    }\n\n    public setupViewRef(view: EmbeddedViewRef<ItemContext>, data: any, index: number): void {\n        const context = view.context;\n        context.$implicit = data;\n        context.item = data;\n        context.index = index;\n        context.even = index % 2 === 0;\n        context.odd = !context.even;\n\n        this.setupItemView.next({\n            context,\n            data,\n            index,\n            view,\n        });\n    }\n\n    protected getItemTemplateViewFactory(\n        template: TemplateRef<ItemContext>\n    ): () => View {\n        return () => {\n            const viewRef = this.loader.createEmbeddedView(\n                template,\n                new ItemContext(),\n                0\n            );\n            const resultView = getItemViewRoot(viewRef);\n            resultView[NG_VIEW] = viewRef;\n\n            return resultView;\n        };\n    }\n\n    private setItemTemplates() {\n        // The itemTemplateQuery may be changed after list items are added that contain <template> inside,\n        // so cache and use only the original template to avoid errors.\n        this.itemTemplate = this.itemTemplateQuery;\n\n        if (this._templateMap) {\n            if (Trace.isEnabled()) {\n                CLog(CLogTypes.info, 'Setting templates');\n            }\n\n            const templates: KeyedTemplate[] = [];\n            this._templateMap.forEach((value) => {\n                templates.push(value);\n            });\n            this._collectionView.itemTemplates = templates;\n        } else {\n            // If the map was not initialized this means that there are no named templates, so we register the default one.\n            this._collectionView.itemTemplate = this.getItemTemplateViewFactory(this.itemTemplate);\n        }\n    }\n\n    private detectChangesOnChild(viewRef: EmbeddedViewRef<ItemContext>, index: number) {\n        if (Trace.isEnabled()) {\n            CLog(CLogTypes.info, 'Manually detect changes in child: ' + index);\n        }\n        viewRef.markForCheck();\n        viewRef.detectChanges();\n    }\n\n    private refresh() {\n        if (this._collectionView) {\n            this._collectionView.refresh();\n        }\n    }\n}\n\nexport interface ComponentView {\n    rootNodes: any[];\n    destroy(): void;\n}\n\nexport type RootLocator = (nodes: any[], nestLevel: number) => View;\n\nexport function getItemViewRoot(viewRef: ComponentView, rootLocator: RootLocator = getSingleViewRecursive): View {\n    const rootView = rootLocator(viewRef.rootNodes, 0);\n    return rootView;\n}\n\n@Directive({ selector: '[cvTemplateKey]' })\nexport class TemplateKeyDirective {\n    constructor(private templateRef: TemplateRef<any>, @Host() private collectionView: CollectionViewComponent) {}\n\n    @Input()\n    set cvTemplateKey(value: any) {\n        if (Trace.isEnabled()) {\n            CLog(CLogTypes.info, 'cvTemplateKey: ' + value);\n        }\n        if (this.collectionView && this.templateRef) {\n            this.collectionView.registerTemplate(value.toLowerCase(), this.templateRef);\n        }\n    }\n}\n","// External\nimport { NO_ERRORS_SCHEMA, NgModule } from '@angular/core';\n\nimport { CollectionViewComponent, TemplateKeyDirective } from './collectionview-comp';\nexport { CollectionViewComponent, TemplateKeyDirective } from './collectionview-comp';\n\n@NgModule({\n    declarations: [CollectionViewComponent, TemplateKeyDirective],\n    exports: [CollectionViewComponent, TemplateKeyDirective],\n    schemas: [NO_ERRORS_SCHEMA],\n})\nexport class CollectionViewModule {}\n"],"names":["registerElement","CollectionView","EventEmitter","ListViewViewTypes","ObservableArray","isListLikeIterable","Trace","CLog","CLogTypes","LayoutBase","ElementRef","IterableDiffers","TemplateRef","ViewContainerRef","i0.ÉµÉµelementStart","i0.ÉµÉµelement","i0.ÉµÉµelementEnd","Component","ChangeDetectionStrategy","Inject","ViewChild","Output","ContentChild","Input","Directive","Host","NgModule","NO_ERRORS_SCHEMA"],"mappings":"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"}